// Mocks generated by Mockito 5.3.2 from annotations
// in south_cinema/test/features/movies/data/repositories/movies_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:south_cinema/core/network/network_info.dart' as _i5;
import 'package:south_cinema/features/movies/data/datasources/movies_service.dart'
    as _i3;
import 'package:south_cinema/features/movies/domain/entities/movie.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovie_0 extends _i1.SmartFake implements _i2.Movie {
  _FakeMovie_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoviesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesService extends _i1.Mock implements _i3.MoviesService {
  MockMoviesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Movie>> getCurrentlyPlayedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentlyPlayedMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i4.Future<List<_i2.Movie>>);
  @override
  _i4.Future<List<_i2.Movie>> getAnnouncedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getAnnouncedMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Movie>>.value(<_i2.Movie>[]),
      ) as _i4.Future<List<_i2.Movie>>);
  @override
  _i4.Future<_i2.Movie> getMovieById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Movie>.value(_FakeMovie_0(
          this,
          Invocation.method(
            #getMovieById,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Movie>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
